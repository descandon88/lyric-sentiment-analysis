# -*- coding: utf-8 -*-
"""lyrics_base.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kdT-ppBljEUi_eOtAmjrCrUuXZma40bQ
"""

!pip install helper
!pip install twython
!pip install -U py_search
!pip install lyricsgenius

#libraries used to extract, clean and manipulate the data
#from helpers import *
import pandas as pd 
import numpy as np
import string

import requests

import nltk
from nltk.sentiment.vader import SentimentIntensityAnalyzer
from nltk import word_tokenize
import nltk.data

import lyricsgenius as genius
import pandas as pd
import string 

import nltk
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer 
from nltk.corpus import stopwords
  


def search_data(query,n,access_token):    
    api = genius.Genius(access_token)

    list_lyrics = []
    list_title = []
    list_artist = []
    list_album = []
    #list_year = []

    artist = api.search_artist(query,max_songs=n,sort='popularity')
    songs = artist.songs
    for song in songs:
        list_lyrics.append(song.lyrics)
        list_title.append(song.title)
        list_artist.append(song.artist)
        #list_album.append(song.album)
        #list_year.append(song.year)

    #df = pd.DataFrame({'artist':list_artist,'title':list_title,'album':list_album,
                        #'date':list_year,'lyric':list_lyrics})
    df = pd.DataFrame({'artist':list_artist,'title':list_title,'lyric':list_lyrics})
    
    return df

access_token = '48AbSrGnLHR79u6TgoSWikB1-dd779xB-2MZmPXSavrvOVDMo8pZYz7OP1Mjk6-B'

df0 = search_data('U2',15,access_token)

df0.head()

df1=search_data('Damien Rice',15,access_token)

df1.head()

df2=search_data('Alanis Morissete',15,access_token)

df2.head()

frames = [df0,df1,df2]
result = pd.concat(frames,ignore_index=True, sort=False)
result.head(20)

result.to_csv('lyrics.csv', index = False)
files.download('lyrics.csv')